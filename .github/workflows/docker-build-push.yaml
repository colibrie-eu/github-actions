---
name: Docker Build and Push

on:
  workflow_call:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          secrets: |
            "bot_pkg_token=${{ secrets.BOT_PKG_TOKEN }}"

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          fail_on_unmatched_files: true
          generate_release_notes: true
          prerelease: false

      - name: Checkout helm-charts repository
        if: github.event_name != 'pull_request'
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner}}/helm-charts
          token: ${{ secrets.BOT_REPO_TOKEN }}

      - name: Update values yaml
        id: update-values-yaml
        if: github.event_name != 'pull_request'
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            ENVIRONMENT=production
            IMAGE_TAG=$(echo $GITHUB_REF | grep -o '[0-9]*\.[0-9]*\.[0-9]*$')
          elif [[ $GITHUB_REF == refs/heads/dev ]]; then
            ENVIRONMENT=development
            IMAGE_TAG=$(echo $DOCKER_METADATA_OUTPUT_TAGS | tr '\n' ' ' | grep -o 'sha-[a-f0-9]*')
          fi

          SERVICE=${GITHUB_REPOSITORY#*/}

          echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT
          echo "service=$SERVICE" >> $GITHUB_OUTPUT

          yq -i ".image.tag = \"${IMAGE_TAG}\"" values/$SERVICE-$ENVIRONMENT.yaml

      - name: Commit and push values yaml
        if: github.event_name != 'pull_request'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(${{ steps.update-values-yaml.outputs.service }}): update ${{ steps.update-values-yaml.outputs.environment }} values yaml"
          commit_user_name: "colibot"
          commit_user_email: "tech@colibrie.eu"
          commit_author: "colibot <tech@colibrie.eu>"
